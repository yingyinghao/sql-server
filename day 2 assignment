--1.
SELECT COUNT(*) AS ProductCount
FROM Production.Product


--2.
SELECT COUNT(*) AS ProductInSubcategory
FROM Production.Product
WHERE ProductSubcategoryID is NOT NULL

--3.
SELECT productSubcategoryID, COUNT(*) AS CountedProducts
FROM Production.Product
GROUP BY ProductSubcategoryID


--4.
SELECT COUNT(*) AS productWithoutSubcategory
FROM Production.Product
WHERE ProductSubcategoryID IS NULL


--5.
SELECT SUM(Quantity) AS totalProductQuantity
FROM Production.ProductInventory


--6.
SELECT ProductID, SUM(Quantity) AS TheSum
FROM Production.ProductInventory
WHERE LocationID = 40
GROUP BY ProductID
HAVING SUM(Quantity) < 100

--7.
SELECT shelf, ProductID, SUM(Quantity) AS TheSum
FROM Production.ProductInventory
WHERE LocationID = 40 
GROUP BY Shelf, ProductID
HAVING SUM(Quantity) < 100


--8.
SELECT ProductID, AVG(Quantity) AS AverageQuantity
FROM Production.ProductInventory
WHERE LocationID = 10
GROUP BY ProductID;


--9.
SELECT productID, Shelf, AVG(ProductID) AS TheAvg
FROM Production.ProductInventory
GROUP BY ProductID, Shelf
ORDER BY Shelf, ProductID

--10
SELECT ProductID, Shelf, Avg(ProductID) AS TheAvg
FROM Production.ProductInventory
WHERE Shelf != 'N/A'
GROUP BY ProductID, Shelf
ORDER BY Shelf, ProductID

--11.
SELECT Color, Class, Count(*) AS TheCount, Avg(ListPrice) AS AvgPrice
FROM Production.Product
WHERE Color is not null AND Class is not NULL
GROUP BY Color, Class
ORDER BY Color, Class

--12
SELECT CR.Name AS Country, SP.Name AS Province
FROM Person.CountryRegion AS CR
JOIN Person.StateProvince AS SP
ON CR.CountryRegionCode = SP.CountryRegionCode
ORDER BY Country, Province


--13
SELECT CR.Name AS Country, SP.Name AS Province 
FROM Person.CountryRegion AS CR
JOIN Person.StateProvince AS SP
ON CR.CountryRegionCode = SP.CountryRegionCode
WHERE CR.name in ('Germany', 'Canada')
ORDER BY Country, Province

--14
SELECT DISTINCT P.ProductName P
FROM Products AS p 
JOIN [Order Details] as od ON p.ProductID = od.ProductID
JOIN Orders o ON od.OrderID = o.OrderID
WHERE o.OrderDate >= DATEADD(YEAR, -27, GETDATE())
ORDER BY P.ProductName

--15.
SELECT TOP 5 O.ShipPostalCode AS ZipCode, SUM(od.Quantity) AS TotalProductsSold
FROM Orders o
JOIN [Order Details] od ON o.OrderID = od.OrderID
WHERE o.ShipPostalCode is NOT NULL
GROUP BY o.ShipPostalCode
ORDER BY TotalProductsSold DESC


--16.

SELECT TOP 5 O.ShipPostalCode AS ZipCode, SUM(od.Quantity) AS TotalProductsSold
FROM Orders o
JOIN [Order Details] od ON o.OrderID = od.OrderID
WHERE o.ShipPostalCode is NOT NULL
GROUP BY o.ShipPostalCode
ORDER BY TotalProductsSold DESC


--17.
SELECT TOP 5 ISNULL(o.ShipPostalCode, 'Unknown') AS ZipCode,
SUM(od.quantity) AS TotalProductsSold
FROM Orders o
JOIN [Order Details] as od ON o.orderID = od.OrderID
WHERE o.OrderDate >= DATEADD(YEAR, -27, GETDATE())
GROUP BY o.ShipPostalCode
ORDER BY TotalProductsSold DESC


--18
SELECT City, COUNT(CustomerID) AS TotalNumberOfCustomers
FROM Customers
GROUP BY City
ORDER BY TotalNumberOfCustomers DESC


--19
SELECT c.ContactName AS CustomerName, o.OrderDate
FROM Customers c
JOIN Orders o ON c.CustomerID = o.OrderID
WHERE o.OrderDate > '1998-01-01'
ORDER BY o.OrderDate


--20
SELECT c.ContactName AS CustomerName, o.OrderDate
FROM Customers AS c
JOIN Orders AS o ON c.CustomerID = O.CustomerID
WHERE o.OrderDate = (SELECT MAX(OrderDate) FROM Orders)
ORDER BY o.OrderDate DESC

--21
SELECT c.ContactName AS CustomerName, COUNT(od.ProductID) AS ProductCount
FROM Customers c
JOIN Orders o ON c.customerID = o.CustomerID
JOIN [Order Details] od ON o.OrderID = od.OrderID
GROUP BY c.ContactName
ORDER BY ProductCount DESC

--22
SELECT c.CustomerID, COUNT(od.ProductID) AS ProductCount
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN [Order Details] od ON o.OrderID = od.OrderID
GROUP BY c.CustomerID
HAVING COUNT(od.ProductID) > 100
ORDER BY ProductCount DESC


--23
SELECT S.CompanyName AS SupplierCompanyName,SH.CompanyName AS ShippingCompanyName
FROM Suppliers AS S
JOIN  Products AS P ON S.SupplierID = P.SupplierID
JOIN Shippers AS SH ON P.SupplierID = SH.ShipperID
GROUP BY S.CompanyName, SH.CompanyName
ORDER BY S.CompanyName, SH.CompanyName;


--24
SELECT o.OrderDate,p.ProductName
FROM Orders AS o
JOIN [Order Details] AS od ON o.OrderID = od.OrderID
JOIN Products AS P ON od.ProductID = p.ProductID
ORDER BY o.OrderDate, p.ProductName;


--25
SELECT 
    E1.EmployeeID AS Employee1ID,
    E1.EmployeeName AS Employee1Name,
    E2.EmployeeID AS Employee2ID,
    E2.EmployeeName AS Employee2Name,
    E1.JobTitle
FROM 
    Employees AS E1
JOIN 
    Employees AS E2 ON E1.JobTitle = E2.JobTitle AND E1.EmployeeID < E2.EmployeeID
ORDER BY 
    E1.JobTitle, E1.EmployeeID, E2.EmployeeID;



--26
SELECT 
    E.BusinessEntityID AS ManagerID,
    P.BusinessEntityID AS ManagerName,
    COUNT(E1.BusinessEntityID) AS EmployeeCount
FROM 
    HumanResources.Employee AS E
JOIN 
    HumanResources.Employee AS E1 ON E.BusinessEntityID = E1.ManagerID
JOIN 
    Production.Product AS P ON E.BusinessEntityID = P.BusinessEntityID
GROUP BY 
    E.BusinessEntityID, P.BusinessEntityID
HAVING 
    COUNT(E1.BusinessEntityID) > 2
ORDER BY 
    EmployeeCount DESC;

--27
SELECT 
    c.City,
    c.CompanyName AS Name,
    c.PersonID AS ContactName,
    'Customer' AS Type
FROM 
    Sales.Customer AS c
JOIN 
    Person.Person AS p ON C.PersonID = p.BusinessEntityID

UNION ALL

SELECT 
    s.City,
    s.CompanyName AS Name,
    s.PersonID AS ContactName,
    'Supplier' AS Type
FROM 
    Production.Supplier AS s
JOIN 
    Person.Person AS p ON s.BusinessEntityID = p.BusinessEntityID

ORDER BY 
    City, Type, Name;
